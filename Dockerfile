# Stage 1: Build the application
FROM maven:3.8.4-openjdk-17 AS build

# Set build-time arguments
ARG DB_URL
ARG DB_USER
ARG DB_PASSWORD
ARG AWS_S3_ACCESS_KEY
ARG AWS_S3_SECRET_KEY
ARG REDIS_HOST
ARG REDIS_PORT
ARG REDIS_USERNAME
ARG REDIS_PASSWORD
ARG REDIS_CONNECTION_STRING
ARG TZ
ARG MAIL_USERNAME
ARG MAIL_PASSWORD
ARG FB_STRING_CONFIG

# Pass build-time arguments as environment variables
ENV DB_URL=${DB_URL}
ENV DB_USER=${DB_USER}
ENV DB_PASSWORD=${DB_PASSWORD}
ENV AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
ENV AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
ENV REDIS_HOST=${REDIS_HOST}
ENV REDIS_PORT=${REDIS_PORT}
ENV REDIS_USERNAME=${REDIS_USERNAME}
ENV REDIS_PASSWORD=${REDIS_PASSWORD}
ENV REDIS_CONNECTION_STRING=${REDIS_CONNECTION_STRING}
ENV TZ=${TZ}
ENV MAIL_USERNAME=${MAIL_USERNAME}
ENV MAIL_PASSWORD=${MAIL_PASSWORD}
ENV FB_STRING_CONFIG=${FB_STRING_CONFIG}

WORKDIR /app
COPY pom.xml .
COPY src ./src
RUN mvn clean install

# Stage 2: Run the application
FROM openjdk:17-jdk-slim

# Set environment variables for runtime
ENV DB_URL=${DB_URL}
ENV DB_USER=${DB_USER}
ENV DB_PASSWORD=${DB_PASSWORD}
ENV AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
ENV AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
ENV REDIS_HOST=${REDIS_HOST}
ENV REDIS_PORT=${REDIS_PORT}
ENV REDIS_USERNAME=${REDIS_USERNAME}
ENV REDIS_PASSWORD=${REDIS_PASSWORD}
ENV REDIS_CONNECTION_STRING=${REDIS_CONNECTION_STRING}
ENV TZ=${TZ}
ENV MAIL_USERNAME=${MAIL_USERNAME}
ENV MAIL_PASSWORD=${MAIL_PASSWORD}
ENV FB_STRING_CONFIG=${FB_STRING_CONFIG}

WORKDIR /app
COPY --from=build /app/target/backend.jar /app/backend.jar
EXPOSE 8086
CMD ["java", "-jar", "/app/backend.jar"]